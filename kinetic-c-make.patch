--- kinetic-c-0.12.0/Makefile.orig	2015-03-13 21:12:09.000000000 +0100
+++ kinetic-c-0.12.0/Makefile	2016-04-11 20:02:53.847011168 +0200
@@ -27,7 +27,7 @@
 WARN += -Werror
 CDEFS += -D_POSIX_C_SOURCE=199309L -D_C99_SOURCE=1
 CFLAGS += -std=c99 -fPIC -g $(WARN) $(CDEFS) $(OPTIMIZE)
-LDFLAGS += -lm -L${OPENSSL_PATH}/lib -lcrypto -lssl -lpthread -ljson-c
+LDFLAGS += -lm -lcrypto -lssl -lpthread -ljson-c -lprotobuf-c -lsocket99
 NUM_SIMS ?= 2
 
 #===============================================================================
@@ -47,18 +47,19 @@
 VERSION = ${shell head -n1 $(VERSION_FILE)}
 THREADPOOL_PATH = ${LIB_DIR}/threadpool
 BUS_PATH = ${LIB_DIR}/bus
-JSONC_LIB = ${OUT_DIR}/libjson-c.a
 
 KINETIC_LIB_NAME = $(PROJECT).$(VERSION)
 KINETIC_LIB = $(BIN_DIR)/lib$(KINETIC_LIB_NAME).a
-LIB_INCS = -I$(LIB_DIR) -I$(PUB_INC) -I$(PROTOBUFC) -I$(SOCKET99) -I$(VENDOR) \
-	-I$(JSONC) -I$(THREADPOOL_PATH) -I$(BUS_PATH) -I${OPENSSL_PATH}/include
+LIB_INCS = -I$(LIB_DIR) -I$(PUB_INC) -I/usr/include/protobuf-c -I/usr/include/socket99 -I$(VENDOR) \
+	-I/usr/include/json-c -I$(THREADPOOL_PATH) -I$(BUS_PATH) -I${OPENSSL_PATH}/include
 
-C_SRC=${LIB_DIR}/*.[ch] $(SOCKET99)/socket99.[ch] $(PROTOBUFC)/protobuf-c/protobuf-c.[ch]
+KINETIC_SO_NAME = lib$(KINETIC_LIB_NAME).so
+KINETIC_SO_DEV = $(BIN_DIR)/$(KINETIC_SO_NAME)
+KINETIC_SO_RELEASE = $(PREFIX)$(LIB_DIR)/$(KINETIC_SO_NAME)
+
+C_SRC=${LIB_DIR}/*.[ch]
 
 LIB_OBJS = \
-	$(OUT_DIR)/socket99.o \
-	$(OUT_DIR)/protobuf-c.o \
 	$(OUT_DIR)/kinetic_allocator.o \
 	$(OUT_DIR)/kinetic_nbo.o \
 	$(OUT_DIR)/kinetic_operation.o \
@@ -105,7 +106,7 @@
 KINETIC_LIB_OTHER_DEPS = Makefile Rakefile $(VERSION_FILE) $(VERSION_INFO)
 
 
-default: makedirs $(KINETIC_LIB)
+default: makedirs $(KINETIC_LIB) $(KINETIC_SO_DEV)
 
 makedirs:
 	@echo; mkdir -p ./bin/examples &> /dev/null; mkdir -p ./bin/unit &> /dev/null; mkdir -p ./bin/systest &> /dev/null; mkdir -p ./out &> /dev/null
@@ -259,10 +260,7 @@
 # Static and Dynamic Library Build Support
 #-------------------------------------------------------------------------------
 
-KINETIC_SO_DEV = $(BIN_DIR)/lib$(KINETIC_LIB_NAME).so
-KINETIC_SO_RELEASE = $(PREFIX)/lib$(KINETIC_LIB_NAME).so
-
-$(KINETIC_LIB): $(KINETIC_LIB_OTHER_DEPS) $(LIB_OBJS) $(JSONC_LIB)
+$(KINETIC_LIB): $(KINETIC_LIB_OTHER_DEPS) $(LIB_OBJS)
 	@echo
 	@echo --------------------------------------------------------------------------------
 	@echo Building static library: $(KINETIC_LIB)
@@ -270,12 +268,12 @@
 	ar -rcs $@ $(LIB_OBJS)
 	ar -t $@
 
-$(KINETIC_SO_DEV): $(LIB_OBJS) $(KINETIC_LIB_OTHER_DEPS) $(JSONC_LIB)
+$(KINETIC_SO_DEV): $(LIB_OBJS) $(KINETIC_LIB_OTHER_DEPS)
 	@echo
 	@echo --------------------------------------------------------------------------------
 	@echo Building dynamic library: $(KINETIC_SO_DEV)
 	@echo --------------------------------------------------------------------------------
-	$(CC) -o $@ -shared $(LDFLAGS) $(LIB_OBJS)
+	$(CC) -o $@ -shared $(LDFLAGS) -Wl,-soname,$(KINETIC_SO_NAME) $(LIB_OBJS)
 
 
 #-------------------------------------------------------------------------------
@@ -285,7 +283,7 @@
 INSTALL ?= install
 RM ?= rm
 
-install: ${JSONC_LIB} json_install $(KINETIC_LIB) $(KINETIC_SO_DEV)
+install: $(KINETIC_LIB) $(KINETIC_SO_DEV)
 	@echo
 	@echo --------------------------------------------------------------------------------
 	@echo Installing $(PROJECT) v$(VERSION) into $(PREFIX)
@@ -293,6 +291,8 @@
 	@echo
 	$(INSTALL) -d $(PREFIX)${LIBDIR}
-	$(INSTALL) -c $(KINETIC_LIB) $(PREFIX)${LIBDIR}/
+	$(INSTALL) -c $(KINETIC_SO_DEV) $(PREFIX)${LIBDIR}/
+	$(INSTALL) -c $(KINETIC_LIB) $(PREFIX)${LIBDIR}/libkinetic-c-client.a
+	ln -s $(KINETIC_SO_NAME) $(PREFIX)$(LIBDIR)/libkinetic-c-client.so
 	$(INSTALL) -d $(PREFIX)/include/
 	$(INSTALL) -c $(PUB_INC)/kinetic_client.h $(PREFIX)/include/
 	$(INSTALL) -c $(PUB_INC)/kinetic_admin_client.h $(PREFIX)/include/
@@ -425,7 +425,7 @@
 $(OUT_DIR)/discovery.o: $(DISCOVERY_UTIL_DIR)/discovery.c
 	$(CC) -c -o $@ $< $(CFLAGS) -I$(PUB_INC) -I$(DISCOVERY_UTIL_DIR) $(LIB_INCS)
 
-$(DISCOVERY_UTIL_EXEC): $(DISCOVERY_UTIL_OBJ) $(KINETIC_LIB) $(JSONC_LIB)
+$(DISCOVERY_UTIL_EXEC): $(DISCOVERY_UTIL_OBJ) $(KINETIC_LIB)
 	@echo
 	@echo --------------------------------------------------------------------------------
 	@echo Building service discovery utility: $(DISCOVERY_UTIL_EXEC)
